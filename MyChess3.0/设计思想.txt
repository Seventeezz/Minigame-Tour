将现实中的物体抽象化，在程序中设计成各种类，每种类都具有其功能，所有类和在一起，共同实现一个目标。

描述五子棋这个游戏的玩法，由此转化为程序设计中的需求：
有两名棋手，分别代表黑白两方，在一个19*19的棋盘中，轮流下棋，直至一方有五连子即游戏结束。

人的思维总是更加概括性质，抽象性质的，要将这种概括性的语言拓展化，知晓其中的具体细节(步骤):
有两名棋手，分别有着自己的名字和代表的黑白方，游戏开始使有一个19*19的物理棋盘展示在双方的眼皮之中，根据顺序，两名棋手分别取对应着自己代表方的颜色的棋子，给出自己要下的棋子的所在位置，并将其投入到棋盘之中，改变了棋盘的状态并再次展示在眼前，每回合结束以后，有裁判（现实中双方都是裁判）判断是否达到了胜利局面或平手局面，没有则继续（重复）……，直至裁判判决一方有五连棋子，游戏结束。

在这样一个具体化的过程中，我们便能知晓我们需要什么对象，对象应该有什么功能，而去相应地设计对象和功能。

五子棋游戏元素构成：
1.棋手
{
       功能：
	①给出新棋子的位置所在
	――问题：如何给出棋子的位置所在？
	――解决：通过键盘上下左右控制，空格落子确定――引出功能（新：通过键盘上下左右控制，空格落子确定新棋子）
	――问题：如何棋子下重合了怎么办？
	――解决：引入当前的虚拟局势，进行对应坐标的判断――引出：（新参数：当前局势）
	②通过键盘上下左右控制，空格落子确定新棋子
       属性：
	①姓名
	②代表颜色方

       


}


2.棋盘
{
       功能：
	①展示出棋盘的当前物理状态
	――问题：如何通过程序展现物理状态？
	――解决：通过打印符号表示棋盘
	――问题：如果有新棋子来了，怎么更新棋盘的物理状态？
	――解决：Plan A-----根据空格落子位置、棋手代表方，将光标移至落子处，覆盖原符号
		――问题：棋盘的物理状态是展现了，但是光有物理状态显示在屏幕上，无法保存其信息，如果判断局势？
		――解决：创造一个虚拟状态去保存棋盘的现有状态即可――引出属性（新：棋盘的虚拟状态）――引出（新：棋盘虚拟状态的更新）
										             ――引出Plan B
		 Plan B------根据棋盘的虚拟状态，输出对应的符号，状态每改变一次，清屏一次
		                    ――引出：不同棋子的虚拟状态如何表示（黑棋1，白棋2，最后黑棋3，最后白棋4）
	②根据新棋子更新棋盘虚拟状态
       属性：
	①棋盘的虚拟状态（数组取值体现）



}



3.棋子
{
        功能：
	无
        
        属性：
	①颜色
	②坐标

}

4.裁判
{
        功能：
	①判断下一个是由谁来下棋（当前方是谁）
	②判断当前局面是否达到胜利/平手局面
	――问题：如何判断？
	――解决：根据最后一颗落子，判断其横向，纵向，西北向，西南向是否有五连棋，有的话则当前方胜利――引出属性（新：最后一颗落子）
        属性：
	①最后一颗落子的坐标
	――问题：如何获得这个坐标？
	――解决：通过给出的新棋子的坐标赋值



}




